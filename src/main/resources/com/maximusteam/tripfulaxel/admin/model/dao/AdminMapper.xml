<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maximusteam.tripfulaxel.admin.model.dao.AdminMapper">

	<!-- 관리자리스트 -->
	<resultMap id="adminList" type="AdminDTO">
		<id column="ADMIN_NO" property="adminNo" />
		<result column="ADMIN_POSITION" property="adminPosition" />
		<result column="ADMIN_NAME" property="adminName" />
		<result column="ADMIN_EMAIL" property="adminEmail" />
		<result column="ADMIN_HIRE_DATE" property="hireDate" />
		<result column="ADMIN_PWD" property="adminPwd" />
	</resultMap>
	
	<!-- 회원리스트 -->
	<resultMap id="memberList" type="MemberDTO">
		<id column="USER_CODE" property="memberNo" />
		<result column="USER_NAME" property="memberName" />
		<result column="USER_EMAIL" property="memberId" />
		<result column="USER_REGISTER_DAY" property="enrollDate" />
		<result column="USER_REPORT_COUNT" property="count" />
	</resultMap>
	  
	<!-- 회원상세정보 -->
	<resultMap id="memberDetail" type="MemberDTO">
		<result column="USER_NAME" property="memberName" />
		<result column="USER_PHONE" property="memberPhone" />
		<result column="USER_BDAY" property="memberBDay" />
		<result column="USER_GENDER" property="gender" />
		<result column="USER_EMAIL" property="memberId" />
		<result column="USER_GUIDE_YN" property="memberGuideStatus" />
		<result column="USER_CODE" property="memberNo" />
	</resultMap>
	
	<!-- 신고리스트 -->
	<resultMap id="reportList" type="ReportDTO">
		<id column="EXAMINE_REQUEST_CODE" property="reportNo" />
		<result column="EXAMINE_REQUEST_REASON" property="reportTitle" />
		<result column="USER_EMAIL" property="reportId" />
		<result column="EXAMINE_REQUEST_YN" property="reportStatus" />
		<result column="EXAMINE_REQUEST_DATE" property="reportDate" />
	</resultMap>
	
	<!-- 신고 상세 -->
	<resultMap id="reportDetail" type="ReportDTO">
		<result column="EXAMINE_REQUEST_REASON" property="reportTitle" />
		<result column="EXAMINE_REQUEST_TO" property="reportTarget" />
		<result column="EXAMINE_REQUEST_FROM" property="reportWriter" />
		<result column="EXAMINE_RESPONSE_CODE" property="responseCode" />
		<result column="EXAMINE_REQUEST_CODE" property="requestCode" />
	</resultMap>
	
	<!-- 가이드 리스트 -->
	<resultMap id="guideList" type="GuideDTO">
		<id column="USER_CODE" property="guideNo" />
		<result column="USER_EMAIL" property="guideId" />
		<result column="USER_GUIDE_YN" property="guideEnrollStatus" />
		<result column="GUIDE_YN" property="guideApproveStatus" />
	</resultMap>

	<!-- 가이드 상세 -->
	<resultMap id="guideDetail" type="GuideDTO">
		<result column="USER_NAME" property="guideName" />
		<result column="USER_GENDER" property="guideGender" />
		<result column="GUIDE_NICKNAME" property="guideNickname" />
		<result column="GUIDE_EXP_YN" property="guideExp" />
		<result column="GUIDE_CAR_YN" property="guideCar" />
		<result column="GUIDE_INTRO" property="guideIntro" />
		<result column="TRIP_INTRO" property="guideTravel"/>
		<result column="EXAMINE_REQUEST_CODE" property="requestCode"/>
		<result column="GUIDE_CODE" property="guideCode"/>
		<result column="USER_CODE" property="userCode"/>
		<result column="TRIP_MEET_LOCATION" property="meetLocation"/>
		<result column="G_TRIP_PAYMENT" property="payment"/>
		<result column="G_TRIP_MAXIMUM" property="maximum"/>
		<result column="G_TRIP_MINIMUM" property="minimum"/>
	</resultMap>
	
	<!-- 가이드 사진 -->
	<resultMap id="guidePic" type="GuideEnrollDTO">
		<result column="GUIDE_IMAGE_SAVED_NAME" property="guideEnrollImage" />
	</resultMap>
	
	<!-- 정산 리스트 -->
	<resultMap id="calculateList" type="CalculateDTO">
		<id column="INVOICE_CODE" property="calculateNo" />
		<result column="USER_EMAIL" property="userId" />
		<result column="INVOICE_DATE" property="calculateDate" />
		<result column="PAYMENT" property="payment" />
	</resultMap>
	
	<!-- 세금 리스트 -->
	<resultMap id="taxList" type="TaxDTO">
		<id column="BILL_REQUEST_CODE" property="taxNo" />
		<result column="USER_EMAIL" property="guideId" />
		<result column="BILL_REQUEST_DATE" property="taxDate" />
	</resultMap>
	
	<!-- 문의리스트 -->
	<resultMap id="answerList" type="AdminAnswerDTO">
		<id column="EXAMINE_REQUEST_CODE" property="answerNo" />
		<result column="USER_EMAIL" property="userId" />
		<result column="EXAMINE_REQUEST_REASON" property="answerTitle" />
		<result column="EXAMINE_REQUEST_DATE" property="answerDate" />
		<result column="EXAMINE_REQUEST_YN" property="answerStatus" />
		<result column="EXAMINE_REQUEST_FROM" property="anwserRequestFrom" />
	</resultMap>

	<!-- 등업리스트 -->
	<resultMap id="levelUpList" type="LevelUpDTO">
		<id column="EXAMINE_REQUEST_CODE" property="levelUpNo" />
		<result column="USER_EMAIL" property="guideId" />
		<result column="GUIDE_LEVEL_DETAIL" property="guideLevel" />
		<result column="TRIP_REVIEW_GRADE" property="starPoint" />
		<result column="EXAMINE_REQUEST_YN" property="levelUpStatus" />
		<result column="USER_CODE" property="guideNo" />
		
		<result column="EXAMINE_REQUEST_REASON" property="requestContent" />
		<result column="REVIEW" property="reviewCount" />
	</resultMap>
	
	<select id="selectAdmin" resultMap="adminList">
        SELECT 
               A.ADMIN_NO
             , A.ADMIN_POSITION
             , A.ADMIN_NAME
             , A.ADMIN_EMAIL
             , DATE_FORMAT( A.ADMIN_HIRE_DATE, '%Y-%m-%d') AS ADMIN_HIRE_DATE
          FROM ADMIN A 
	</select>
	
	<select id="selectMember" resultMap="memberList">
        SELECT 
               A.USER_CODE
             , A.USER_NAME
             , A.USER_EMAIL
             , DATE_FORMAT( A.USER_REGISTER_DAY, '%Y-%m-%d') AS USER_REGISTER_DAY
             , A.USER_REPORT_COUNT
          FROM USER A
         WHERE USER_GUIDE_YN = 'N'
	</select>
	
	<select id="selectMemberDetail" resultMap="memberDetail" parameterType="_int">
        SELECT 
               A.USER_NAME
             , A.USER_PHONE
             , A.USER_BDAY
             , A.USER_GENDER
             , A.USER_EMAIL
             , A.USER_GUIDE_YN
             , A.USER_CODE
          FROM USER A
         WHERE USER_CODE = #{no}
	</select>
	
	<select id="selectReport" resultMap="reportList" parameterType="ReportDTO">
        SELECT 
               A.EXAMINE_REQUEST_CODE
             , A.EXAMINE_REQUEST_REASON
             , C.USER_EMAIL
             , A.EXAMINE_REQUEST_YN
             , DATE_FORMAT( A.EXAMINE_REQUEST_DATE, '%Y-%m-%d') AS EXAMINE_REQUEST_DATE
          FROM EXAMINE A
          JOIN EXAMINE_TYPE B ON (A.TYPE_CODE = B.EXAMINE_TYPE_CODE)
          JOIN USER C ON (A.EXAMINE_REQUEST_FROM = C.USER_CODE)
         <if test='userType.equals("all")'>
	       WHERE EXAMINE_TYPE_CODE = 1
            OR EXAMINE_TYPE_CODE = 2
	      </if>
	      <if test='userType.equals("guide")'>
	       WHERE EXAMINE_TYPE_CODE = 1
	      </if>
	      <if test='userType.equals("user")'>
	       WHERE EXAMINE_TYPE_CODE = 2
	      </if>
	</select>
	
	<select id="selectReportDetail" resultMap="reportDetail" parameterType="_int">
	        SELECT 
               A.EXAMINE_REQUEST_REASON
             , A.EXAMINE_REQUEST_FROM
             , A.EXAMINE_REQUEST_TO
             , A.EXAMINE_REQUEST_CODE 
         FROM EXAMINE A
         JOIN EXAMINE_TYPE B ON (A.TYPE_CODE = B.EXAMINE_TYPE_CODE)
        WHERE A.EXAMINE_REQUEST_CODE = #{ no }
	</select>
	
	<select id="selectGuide" resultMap="guideList">
	    SELECT 
               A.USER_CODE
             , A.USER_EMAIL
             , A.USER_GUIDE_YN
             , B.GUIDE_YN
          FROM USER A
          JOIN GUIDE B ON (A.USER_CODE = B.USER_CODE)
         WHERE A.USER_GUIDE_YN = 'N'
           AND B.GUIDE_YN = 'N';
	</select>
	
    <select id="selectEnrollDetail" resultMap="guideDetail" parameterType="_int">
        SELECT 
	           B.USER_NAME
	         , B.USER_GENDER
	         , A.GUIDE_NICKNAME
	         , A.GUIDE_EXP_YN
	         , A.GUIDE_CAR_YN
	         , A.GUIDE_INTRO
	         , H.TRIP_INTRO 
	         , H.TRIP_MEET_LOCATION 
	         , G.G_TRIP_PAYMENT 
	         , G.G_TRIP_MAXIMUM 
	         , G.G_TRIP_MINIMUM 
	         , C.EXAMINE_REQUEST_CODE 
	         , A.GUIDE_CODE
	         , B.USER_CODE
	      FROM USER B
	      JOIN GUIDE A ON (A.USER_CODE = B.USER_CODE)
	      JOIN EXAMINE C ON (B.USER_CODE = C.EXAMINE_REQUEST_FROM)
	      JOIN EXAMINE_TYPE D ON (C.TYPE_CODE = D.EXAMINE_TYPE_CODE)
	      JOIN TRIP_REGIST_LIST E ON (B.USER_CODE = E.USER_CODE)
	      JOIN TRIP F ON (E.TRIP_CODE = F.TRIP_CODE)
	      JOIN GUIDE_TRIP G ON (F.TRIP_CODE = G.TRIP_CODE)
	      JOIN TRIP H ON (G.TRIP_CODE = H.TRIP_CODE)
	     WHERE A.USER_CODE = #{ no }
           AND D.EXAMINE_TYPE_CODE = 3;
	</select>
	
 	<select id="selectProfilePic" resultMap="guidePic" parameterType="_int">
        SELECT 
	           A.GUIDE_IMAGE_SAVED_NAME
	     FROM GUIDE_IMAGE A
	     JOIN USER B ON (A.USER_CODE = B.USER_CODE)
	    WHERE A.USER_CODE = #{ no }
	      AND GUIDE_IMAGE_TYPE_CODE = 1;
	</select>
	
	<select id="selectIdPic" resultMap="guidePic" parameterType="_int">
	    SELECT 
	           A.GUIDE_IMAGE_SAVED_NAME
	      FROM GUIDE_IMAGE A
	      JOIN USER B ON (A.USER_CODE = B.USER_CODE)
	     WHERE A.USER_CODE = #{ no }
	       AND GUIDE_IMAGE_TYPE_CODE = 3;
	</select> 
	
	<select id="selectCalculate" resultMap="calculateList">
        SELECT 
               A.INVOICE_CODE
             , E.USER_EMAIL
             , DATE_FORMAT(A.INVOICE_DATE, '%Y-%m-%d') AS INVOICE_DATE
          FROM INVOICE A
          JOIN INVOICE_HISTORY B ON (A.INVOICE_CODE = B.INVOICE_CODE)
          JOIN PAY_APPLY C ON ( B.PAY_APPLY_CODE = C.PAY_APPLY_CODE)
          JOIN JOIN_TRIP_APPLY D ON ( C.JOIN_TRIP_APPLY_CODE = D.JOIN_TRIP_APPLY_CODE)
          JOIN USER E ON ( D.USER_CODE = E.USER_CODE);	
    </select>	
	
	<select id="selectTax" resultMap="taxList">
         SELECT 
               A.BILL_REQUEST_CODE
             , E.USER_EMAIL
             , DATE_FORMAT(A.BILL_REQUEST_DATE, '%Y-%m-%d') AS BILL_REQUEST_DATE
          FROM BILL_REQUEST A
          JOIN INVOICE_HISTORY B on (A.INVOICE_CODE = B.INVOICE_CODE)
          JOIN PAY_APPLY C ON ( B.PAY_APPLY_CODE = C.PAY_APPLY_CODE)
          JOIN JOIN_TRIP_APPLY D ON ( C.JOIN_TRIP_APPLY_CODE = D.JOIN_TRIP_APPLY_CODE)
          JOIN USER E ON ( D.USER_CODE = E.USER_CODE)
	</select>	
	
	<delete id="deleteMember" parameterType="_int">
        DELETE 
          FROM USER
         WHERE USER_CODE = #{ no } 
	</delete>
	
	<delete id="deleteAdmin" parameterType="_int">
        DELETE 
          FROM ADMIN
         WHERE ADMIN_NO = #{ no } 
	</delete>
	
	<insert id="insertReport" parameterType="ReportDTO">
	
		<selectKey  resultType="ReportDTO" keyColumn="responseCode" keyProperty="responseCode" order="BEFORE">
        SELECT 
	           MAX(EXAMINE_RESPONSE_CODE + 1)  as responseCode
	      FROM EXAMINE_RESPONSE
    	</selectKey>
		INSERT 
		  INTO EXAMINE_RESPONSE
		(
			EXAMINE_RESPONSE_CODE
		,	EXAMINE_RESPONSE_REASON
		,	EXAMINE_RESPONSE_DATE
		,	EXAMINE_REQUEST_CODE
		,	EXAMINE_JUDGE_CODE
		,	ADMIN_NO
		)
		VALUES
		(
		 #{responseCode}
		,#{responseContent}
		,#{responseDate} 
		,#{requestCode}
		,#{examineCode}
		,1
		)
	</insert>
	
	<update id="updateReportStatus" parameterType="ReportDTO">
        UPDATE 
  	    EXAMINE
  		   SET 
               EXAMINE_REQUEST_YN = 'Y'
         WHERE EXAMINE_REQUEST_CODE = #{ requestCode }
	</update> 
	
	<update id="updateReportCount" parameterType="ReportDTO">
        UPDATE 
          USER a, USER b
           SET
               a.USER_REPORT_COUNT = b.USER_REPORT_COUNT + 1
         WHERE a.USER_CODE = #{ reportTarget }	
	</update>  
	
	<select id="selectAnswer" resultMap="answerList" parameterType="AdminAnswerDTO">
        SELECT
	           A.EXAMINE_REQUEST_CODE
	         , C.USER_EMAIL
	         , A.EXAMINE_REQUEST_REASON
	         , DATE_FORMAT(A.EXAMINE_REQUEST_DATE, '%Y-%m-%d') AS EXAMINE_REQUEST_DATE
	         , A.EXAMINE_REQUEST_YN
	     FROM EXAMINE A
	 	 JOIN EXAMINE_TYPE B ON (A.TYPE_CODE = B.EXAMINE_TYPE_CODE)
	 	 JOIN USER C ON (A.EXAMINE_REQUEST_FROM = C.USER_CODE)
         <if test='answerType.equals("all")'>
		WHERE EXAMINE_TYPE_CODE = 5
           OR EXAMINE_TYPE_CODE = 6;    
	      </if>
	      <if test='answerType.equals("guide")'>
	    WHERE EXAMINE_TYPE_CODE = 5
	      </if>
	      <if test='answerType.equals("user")'>
	    WHERE EXAMINE_TYPE_CODE = 6
	      </if>
	</select>
	
	<select id="selectAnswerDetail" resultMap="answerList" parameterType="_int">
        SELECT 
               B.USER_EMAIL
             , A.EXAMINE_REQUEST_REASON
             , A.EXAMINE_REQUEST_CODE
             , A.EXAMINE_REQUEST_FROM
          FROM EXAMINE A
          JOIN USER B ON (A.EXAMINE_REQUEST_FROM = B.USER_CODE)
         WHERE A.EXAMINE_REQUEST_CODE = #{ no }
	</select>
	
	<insert id="insertAnswer" parameterType="AdminAnswerDTO">
	
		<selectKey  resultType="int" keyColumn="responseCode" keyProperty="responseCode" order="BEFORE">
        SELECT 
	           MAX(EXAMINE_RESPONSE_CODE + 1)  as responseCode
	      FROM EXAMINE_RESPONSE
    	</selectKey>
    	
		INSERT 
		  INTO EXAMINE_RESPONSE
		(
			EXAMINE_RESPONSE_CODE
		,	EXAMINE_RESPONSE_REASON
		,	EXAMINE_RESPONSE_DATE
		,	EXAMINE_REQUEST_CODE
		,	EXAMINE_JUDGE_CODE
		,	ADMIN_NO
		)
		VALUES
		(
		 #{responseCode}
		,#{responseContent}
		,#{responseDate} 
		,#{noticeRequestCode}
		,2
		,1
		)
	</insert>
	
	<update id="updateAnswerStatus" parameterType="AdminAnswerDTO">
        UPDATE 
  	    EXAMINE
  		   SET 
               EXAMINE_REQUEST_YN = 'Y'
         WHERE EXAMINE_REQUEST_CODE = #{ anwserRequestCode }
	</update> 
	
	<select id="selectLevelUpList" resultMap="levelUpList">
        SELECT 
     		   A.EXAMINE_REQUEST_CODE
     		 , B.USER_EMAIL
     		 , D.GUIDE_LEVEL_DETAIL
    		 , G.TRIP_REVIEW_GRADE
     		 , A.EXAMINE_REQUEST_YN
     		 , B.USER_CODE
		  FROM EXAMINE A 
		  JOIN USER B ON (A.EXAMINE_REQUEST_FROM = B.USER_CODE)
		  JOIN GUIDE C ON (B.USER_CODE = C.USER_CODE)
		  JOIN GUIDE_LEVEL D ON (C.GUIDE_LEVEL_CODE = D.GUIDE_LEVEL_CODE)
		  JOIN TRIP_REGIST_LIST E ON (B.USER_CODE = E.USER_CODE)
		  JOIN JOIN_TRIP_APPLY F ON (E.TRIP_REGIST_LIST_CODE = F.TRIP_REGIST_LIST_CODE)
		  JOIN TRIP_REVIEW G ON (F.JOIN_TRIP_APPLY_CODE = G.JOIN_TRIP_APPLY_CODE)
		  JOIN EXAMINE_TYPE H ON (A.TYPE_CODE = H.EXAMINE_TYPE_CODE)
		 WHERE H.EXAMINE_TYPE_CODE = '7';
	</select>
	
	<select id="selectLevelUpDetail" resultMap="levelUpList" parameterType="_int">
        SELECT 
     		   A.EXAMINE_REQUEST_REASON 
    		  , G.TRIP_REVIEW_GRADE
     		  , (	
        	    SELECT 
	    	     COUNT(TRIP_REPLY_DETAIL)
	      	      FROM USER A
	 	  		  JOIN TRIP_REGIST_LIST B ON (A.USER_CODE = B.USER_CODE)
	  	  	  	  JOIN JOIN_TRIP_APPLY C ON (B.TRIP_REGIST_LIST_CODE = C.TRIP_REGIST_LIST_CODE)
	   	  		  JOIN TRIP_REVIEW D ON (C.JOIN_TRIP_APPLY_CODE = D.JOIN_TRIP_APPLY_CODE)
	 	  		  JOIN TRIP_REPLY E ON (D.TRIP_REVIEW_CODE = E.TRIP_REVIEW_CODE)
	 	 		 WHERE A.USER_CODE = #{ no }
	   		    ) AS REVIEW
	   		   , A.EXAMINE_REQUEST_CODE 
	   		   , B.USER_CODE
 		  FROM EXAMINE A 
 		  JOIN USER B ON (A.EXAMINE_REQUEST_FROM = B.USER_CODE)
 		  JOIN GUIDE C ON (B.USER_CODE = C.USER_CODE)
 		  JOIN GUIDE_LEVEL D ON (C.GUIDE_LEVEL_CODE = D.GUIDE_LEVEL_CODE)
 		  JOIN TRIP_REGIST_LIST E ON (B.USER_CODE = E.USER_CODE)
 		  JOIN JOIN_TRIP_APPLY F ON (E.TRIP_REGIST_LIST_CODE = F.TRIP_REGIST_LIST_CODE)
 		  JOIN TRIP_REVIEW G ON (F.JOIN_TRIP_APPLY_CODE = G.JOIN_TRIP_APPLY_CODE)
 		  JOIN EXAMINE_TYPE H ON (A.TYPE_CODE = H.EXAMINE_TYPE_CODE)
 		  JOIN TRIP_REPLY I ON (G.TRIP_REVIEW_CODE = I.TRIP_REVIEW_CODE)
		 WHERE B.USER_CODE = #{ no }
  		   AND H.EXAMINE_TYPE_CODE = '7'
	</select>
	
	<insert id="insertLevelUp" parameterType="LevelUpDTO">
	
		<selectKey  resultType="LevelUpDTO" keyColumn="responseCode" keyProperty="responseCode" order="BEFORE">
        SELECT 
	           MAX(EXAMINE_RESPONSE_CODE + 1)  as responseCode
	      FROM EXAMINE_RESPONSE
    	</selectKey>
		INSERT 
		  INTO EXAMINE_RESPONSE
		(
			EXAMINE_RESPONSE_CODE
		,	EXAMINE_RESPONSE_REASON
		,	EXAMINE_RESPONSE_DATE
		,	EXAMINE_REQUEST_CODE
		,	EXAMINE_JUDGE_CODE
		,	ADMIN_NO
		)
		VALUES
		(
		 #{responseCode}
		,#{responseContent}
		,#{responseDate} 
		,#{requestCode}
		,#{examineCode}
		,1
		)
	</insert>
	
    <update id="updateLevelStatus" parameterType="LevelUpDTO">
        UPDATE 
  	    EXAMINE
  		   SET 
               EXAMINE_REQUEST_YN = 'Y'
         WHERE EXAMINE_REQUEST_CODE = #{ requestCode }
	</update> 
	
	<update id="updateLevelUpCount" parameterType="LevelUpDTO">
        UPDATE 
         GUIDE
           SET
              GUIDE_LEVEL_CODE = GUIDE_LEVEL_CODE + 1
         WHERE USER_CODE = #{ guideNo } 
	</update>  
	
	<insert id="insertGuideEnroll" parameterType="GuideDTO">
	
		<selectKey  resultType="GuideDTO" keyColumn="responseCode" keyProperty="responseCode" order="BEFORE">
        SELECT 
	           MAX(EXAMINE_RESPONSE_CODE + 1)  as responseCode
	      FROM EXAMINE_RESPONSE
    	</selectKey>
		INSERT 
		  INTO EXAMINE_RESPONSE
		(
			EXAMINE_RESPONSE_CODE
		,	EXAMINE_RESPONSE_REASON
		,	EXAMINE_RESPONSE_DATE
		,	EXAMINE_REQUEST_CODE
		,	EXAMINE_JUDGE_CODE
		,	ADMIN_NO
		)
		VALUES
		(
		 #{responseCode}
		,#{responseContent}
		,#{responseDate} 
		,#{requestCode}
		,#{examineCode}
		,1
		)
	</insert>
	
     <update id="updateEnrollRequestStatus" parameterType="GuideDTO">
        UPDATE 
  	    EXAMINE
  		   SET 
               EXAMINE_REQUEST_YN = 'Y'
         WHERE EXAMINE_REQUEST_CODE = #{ requestCode }
	</update> 
	
	<update id="updateEnrollGuideStatus" parameterType="GuideDTO">
        UPDATE 
         GUIDE
           SET
               GUIDE_YN = 'Y'
         WHERE GUIDE_CODE = #{ guideCode } 
	</update> 

	<update id="updateEnrollUserStatus" parameterType="GuideDTO">
        UPDATE 
          USER
           SET
               USER_GUIDE_YN = 'Y'
         WHERE USER_CODE = #{ userCode } 
	</update> 
		
	<update id="updateEnrollRegistStatus" parameterType="GuideDTO">
        UPDATE 
        TRIP_REGIST_LIST
           SET
               REGIST_TYPE_CODE = #{ registTypeCode }
         WHERE USER_CODE = #{ userCode } 
	</update>
	
	<insert id="insertWorkerEnroll" parameterType="AdminDTO">
		INSERT 
		  INTO ADMIN
		(
			ADMIN_HIRE_DATE
		,	ADMIN_NO
		,	ADMIN_NAME
		,	ADMIN_EMAIL
		,	ADMIN_POSITION
		,	ADMIN_PWD
		)
		VALUES
		(
		 #{ hireDate }
		,#{ adminNo }
		,#{ adminName } 
		,#{ adminEmail }
		,#{ adminPosition }
		,#{ adminPwd } 
		)
	</insert>
	
	<select id="selectGuideInforamtionList" resultMap="guideList">
        SELECT 
               A.USER_CODE
             , A.USER_EMAIL
             , A.USER_GUIDE_YN
             , B.GUIDE_YN
          FROM USER A
          JOIN GUIDE B ON (A.USER_CODE = B.USER_CODE)
          JOIN EXAMINE C ON (A.USER_CODE = C.EXAMINE_REQUEST_FROM)
         WHERE A.USER_GUIDE_YN = 'Y'
           AND B.GUIDE_YN = 'Y'
           AND C.TYPE_CODE = 4;
	</select>

    <select id="selectGuideInformationDetail" resultMap="guideDetail" parameterType="_int">
        SELECT 
	           B.USER_NAME
	         , B.USER_GENDER
	         , A.GUIDE_NICKNAME
	         , A.GUIDE_EXP_YN
	         , A.GUIDE_CAR_YN
	         , A.GUIDE_INTRO
	         , H.TRIP_INTRO 
	         , H.TRIP_MEET_LOCATION 
	         , G.G_TRIP_PAYMENT 
	         , G.G_TRIP_MAXIMUM 
	         , G.G_TRIP_MINIMUM 	         
	         , C.EXAMINE_REQUEST_CODE 
	         , A.GUIDE_CODE
	         , B.USER_CODE
	      FROM USER B
	      JOIN GUIDE A ON (A.USER_CODE = B.USER_CODE)
	      JOIN EXAMINE C ON (B.USER_CODE = C.EXAMINE_REQUEST_FROM)
	      JOIN EXAMINE_TYPE D ON (C.TYPE_CODE = D.EXAMINE_TYPE_CODE)
	      JOIN TRIP_REGIST_LIST E ON (B.USER_CODE = E.USER_CODE)
	      JOIN TRIP F ON (E.TRIP_CODE = F.TRIP_CODE)
	      JOIN GUIDE_TRIP G ON (F.TRIP_CODE = G.TRIP_CODE)
	      JOIN TRIP H ON (G.TRIP_CODE = H.TRIP_CODE)
	     WHERE B.USER_CODE = #{ no }
           AND C.TYPE_CODE = 4; 
	</select>
	
	<insert id="insertGuideInformationFix" parameterType="GuideDTO">
	
		<selectKey  resultType="GuideDTO" keyColumn="responseCode" keyProperty="responseCode" order="BEFORE">
        SELECT 
	           MAX(EXAMINE_RESPONSE_CODE + 1)  as responseCode
	      FROM EXAMINE_RESPONSE
    	</selectKey>
		INSERT 
		  INTO EXAMINE_RESPONSE
		(
			EXAMINE_RESPONSE_CODE
		,	EXAMINE_RESPONSE_REASON
		,	EXAMINE_RESPONSE_DATE
		,	EXAMINE_REQUEST_CODE
		,	EXAMINE_JUDGE_CODE
		,	ADMIN_NO
		)
		VALUES
		(
		 #{responseCode}
		,#{responseContent}
		,#{responseDate} 
		,#{requestCode}
		,#{examineCode}
		,1
		)
	</insert>
	
	<update id="updateGuideInformationRequestStatus" parameterType="GuideDTO">
        UPDATE 
  	    EXAMINE
  		   SET 
               EXAMINE_REQUEST_YN = 'Y'
         WHERE EXAMINE_REQUEST_CODE = #{ requestCode }
	</update> 
	
	<update id="updateGuideInformationRegistStatus" parameterType="GuideDTO">
        UPDATE 
        TRIP_REGIST_LIST
           SET
               REGIST_TYPE_CODE = #{ registTypeCode }
         WHERE USER_CODE = #{ userCode }
	</update>
	
	<select id="selectLogin" resultMap="adminList" parameterType="AdminDTO">
		SELECT 
		        ADMIN_NO
		      , ADMIN_POSITION
		      , ADMIN_NAME
		      , ADMIN_EMAIL
		      , ADMIN_PWD
		 FROM ADMIN
		WHERE  ADMIN_EMAIL = #{ adminEmail }
	</select>
	
	<select id="selectCalculateDetail" resultMap="calculateList">
        SELECT 
               D.PAYMENT
             , F.INVOICE_DATE 
          FROM USER A 
          JOIN TRIP_REGIST_LIST B ON (A.USER_CODE = B.USER_CODE)
          JOIN JOIN_TRIP_APPLY C ON (B.USER_CODE = C.USER_CODE)
          JOIN PAY_APPLY D ON (C.JOIN_TRIP_APPLY_CODE = D.JOIN_TRIP_APPLY_CODE)
          JOIN INVOICE_HISTORY E ON (D.PAY_APPLY_CODE = E.PAY_APPLY_CODE)
          JOIN INVOICE F ON (E.INVOICE_CODE = F.INVOICE_CODE)
         WHERE D.PAY_YN = 'Y'
           AND F.INVOICE_CODE = #{ no }
    </select>	
</mapper>